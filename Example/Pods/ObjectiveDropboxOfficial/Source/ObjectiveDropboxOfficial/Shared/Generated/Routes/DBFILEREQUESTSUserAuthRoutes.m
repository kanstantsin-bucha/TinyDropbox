///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import "DBFILEREQUESTSUserAuthRoutes.h"
#import "DBFILEREQUESTSCreateFileRequestArgs.h"
#import "DBFILEREQUESTSCreateFileRequestError.h"
#import "DBFILEREQUESTSFileRequest.h"
#import "DBFILEREQUESTSFileRequestDeadline.h"
#import "DBFILEREQUESTSFileRequestError.h"
#import "DBFILEREQUESTSGeneralFileRequestsError.h"
#import "DBFILEREQUESTSGetFileRequestArgs.h"
#import "DBFILEREQUESTSGetFileRequestError.h"
#import "DBFILEREQUESTSListFileRequestsError.h"
#import "DBFILEREQUESTSListFileRequestsResult.h"
#import "DBFILEREQUESTSRouteObjects.h"
#import "DBFILEREQUESTSUpdateFileRequestArgs.h"
#import "DBFILEREQUESTSUpdateFileRequestDeadline.h"
#import "DBFILEREQUESTSUpdateFileRequestError.h"
#import "DBRequestErrors.h"
#import "DBStoneBase.h"
#import "DBTransportClientProtocol.h"

@implementation DBFILEREQUESTSUserAuthRoutes

- (instancetype)init:(id<DBTransportClient>)client {
  self = [super init];
  if (self) {
    _client = client;
  }
  return self;
}

- (DBRpcTask *)create:(NSString *)title destination:(NSString *)destination {
  DBRoute *route = DBFILEREQUESTSRouteObjects.DBFILEREQUESTSCreate;
  DBFILEREQUESTSCreateFileRequestArgs *arg =
      [[DBFILEREQUESTSCreateFileRequestArgs alloc] initWithTitle:title destination:destination];
  return [self.client requestRpc:route arg:arg];
}

- (DBRpcTask *)create:(NSString *)title
          destination:(NSString *)destination
             deadline:(DBFILEREQUESTSFileRequestDeadline *)deadline
                 open:(NSNumber *)open {
  DBRoute *route = DBFILEREQUESTSRouteObjects.DBFILEREQUESTSCreate;
  DBFILEREQUESTSCreateFileRequestArgs *arg = [[DBFILEREQUESTSCreateFileRequestArgs alloc] initWithTitle:title
                                                                                            destination:destination
                                                                                               deadline:deadline
                                                                                                   open:open];
  return [self.client requestRpc:route arg:arg];
}

- (DBRpcTask *)get:(NSString *)id_ {
  DBRoute *route = DBFILEREQUESTSRouteObjects.DBFILEREQUESTSGet;
  DBFILEREQUESTSGetFileRequestArgs *arg = [[DBFILEREQUESTSGetFileRequestArgs alloc] initWithId_:id_];
  return [self.client requestRpc:route arg:arg];
}

- (DBRpcTask *)list {
  DBRoute *route = DBFILEREQUESTSRouteObjects.DBFILEREQUESTSList;
  return [self.client requestRpc:route arg:nil];
}

- (DBRpcTask *)update:(NSString *)id_ {
  DBRoute *route = DBFILEREQUESTSRouteObjects.DBFILEREQUESTSUpdate;
  DBFILEREQUESTSUpdateFileRequestArgs *arg = [[DBFILEREQUESTSUpdateFileRequestArgs alloc] initWithId_:id_];
  return [self.client requestRpc:route arg:arg];
}

- (DBRpcTask *)update:(NSString *)id_
                title:(NSString *)title
          destination:(NSString *)destination
             deadline:(DBFILEREQUESTSUpdateFileRequestDeadline *)deadline
                 open:(NSNumber *)open {
  DBRoute *route = DBFILEREQUESTSRouteObjects.DBFILEREQUESTSUpdate;
  DBFILEREQUESTSUpdateFileRequestArgs *arg = [[DBFILEREQUESTSUpdateFileRequestArgs alloc] initWithId_:id_
                                                                                                title:title
                                                                                          destination:destination
                                                                                             deadline:deadline
                                                                                                 open:open];
  return [self.client requestRpc:route arg:arg];
}

@end
